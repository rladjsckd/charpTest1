#07/20
CREATE TABLE DEPT_COPY
AS SELECT * FROM DEPT;

SELECT * FROM DEPT;

CREATE TABLE DEPT_COPY2
AS SELECT * FROM DEPT
WHERE 1 <> 1;

SELECT * FROM DEPT_COPY2;

#DEPT_COPY2 테이블에 
1. '홍길도','안동'

INSERT INTO DEPT_COPY2 (DEPTNO, DNAME, LOC)
VALUES (1,'홍길동','안동');

SELECT * FROM DEPT_COPY2;

INSERT INTO DEPT_COPY2
VALUES (2,'이순신','통영');

SELECT * FROM DEPT_COPY2;

INSERT INTO DEPT_COPY2
VALUES (3,'강감찬','평양');

SELECT * FROM DEPT_COPY2;

UPDATE DEPT_COPY2
SET LOC = '서울'
WHERE DEPTNO = 3;

SELECT * FROM DEPT_COPY2;

ROLLBACK;

COMMIT;

#1번 홍길동 데이터를 삭제해 주세요
DELETE FROM DEPT_COPY2
WHERE DNAME = '홍길동';

SELECT * FROM DEPT_COPY2;

#테이블 삭제 EMP_TEMP
DROP TABLE EMP_TEMP;

CREATE TABLE EMP_TEMP
AS SELECT * FROM DEPT;

SELECT * FROM EMP_TEMP;

CREATE TABLE EMP_TEMP
AS SELECT * FROM DEPT
WHERE 1<>1;

SELECT * FROM EMP_TEMP;

INSERT INTO EMP_TEMP
VALUES(9998,'홍길동','사장',NULL, SYSDATE ,5000, 1000, 10);

DELETE FROM EMP_TEMP
WHERE EMPNO = 9998;

#287P Q1
CREATE TABLE CHAP10HW_EMP AS SELECT * FROM EMP;
CREATE TABLE CHAP10HW_DEPT AS SELECT * FROM DEPT;
CREATE TABLE CHAP10HW_SALGRADE AS SELECT * FROM SALGRADE;

SELECT * FROM DEPT;

INSERT INTO DEPT
VALUES (50,'ORACLE','BUSAN');

INSERT INTO DEPT
VALUES (60,'SQL','ILSAN');

INSERT INTO DEPT
VALUES (70,'SELECT','INCHEON');

INSERT INTO DEPT
VALUES (80,'DML','BUNDANG');

SELECT * FROM DEPT;

INSERT INTO CHAP10HW_EMP
VALUES (7201, 'TEST_USER1','MANAGER',7788,'2016-01-02',4500,NULL,50);

SELECT * FROM CHAP10HW_EMP;

INSERT INTO CHAP10HW_EMP
VALUES (7202, 'TEST_USER2','CLERK',7201,'2016-02-21',1800,NULL ,50);

INSERT INTO CHAP10HW_EMP
VALUES (7203, 'TEST_USER3','ANALYYST',7201,'2016-04-11',3400,NULL ,60);

INSERT INTO CHAP10HW_EMP
VALUES (7204, 'TEST_USER4','SALESMAN',7201,'2016-05-31',2700,300 ,60);

INSERT INTO CHAP10HW_EMP
VALUES (7205, 'TEST_USER5','CLERK',7201,'2016-07-20',2600,NULL ,70);

INSERT INTO CHAP10HW_EMP
VALUES (7206, 'TEST_USER6','CLERK',7201,'2016-09-08',2600,NULL ,70);

INSERT INTO CHAP10HW_EMP
VALUES (7207, 'TEST_USER7','LECTURER',7201,'2016-10-28',2300,NULL ,80);

INSERT INTO CHAP10HW_EMP
VALUES (7208, 'TEST_USER8','STUDENT',7201,'2018-03-09',1200,NULL ,80);

SELECT * FROM CHAP10HW_EMP;

ROLLBACK;

#Q3
UPDATE CHAP10HW_EMP 
SET DEPTNO = 70
WHERE SAL > (SELECT AVG(SAL) FROM CHAP10HW_EMP WHERE DEPTNO=50);

#Q4
UPDATE CHAP10HW_EMP 
SET SAL = SAL*1.1, DEPTNO = 80
WHERE HIREDATE > (SELECT MIN(HIREDATE) 
                  FROM CHAP10HW_EMP 
                  WHERE DEPTNO = 60);

#Q5
DELETE FROM CHAP10HW_EMP 
WHERE SAL IN (SELECT E.SAL FROM CHAP10HW_EMP E JOIN CHAP10HW_SALGRADE S
ON(E.SAL BETWEEN S.LOSAL AND S.HISAL)
WHERE S.GRADE=5);

/*컬럼 이름 생성 규칙
1. 컬럼 이름은 문자로 시작해야 한다.
2. 컬럼 이름은 30BYTES 이하여야 한다.
3. 한 테이블의 컬럼 이름은 중복될 수 없다.
4. 컬럼 이름은 영문자(한글), 숫자(0~9), 특수문자 사용가능
5. SQL 키워드는 컬럼 이름등으로 사용할 수 없다.
*/
#테이블 만들기
CREATE TABLE EMP_DDL(
    EMPNO       NUMBER(4),
    ENAME       VARCHAR2(10),
    JOB         VARCHAR2(9),
    MGR         NUMBER(4),
    HIREDATE    DATE,
    SAL         NUMBER(7,2),
    COMM        NUMBER(7,2),
    DEPTNO      NUMBER(2)
);

#테이블 구조 변경 ALTER
CREATE TABLE EMP_ALTER
    AS SELECT * FROM EMP;

SELECT * FROM EMP_ALTER;
#컬럼추가
ALTER TABLE EMP_ALTER
 ADD HP VARCHAR2(20);
 
SELECT * FROM EMP_ALTER;
#TEL 컬럼 추가
ALTER TABLE EMP_ALTER
 ADD TEL VARCHAR2(20);
SELECT * FROM EMP_ALTER;

#TEL 컬람 삭제
ALTER TABLE EMP_ALTER
 DROP COLUMN TEL;
DESC EMP_ALTER;
COMMIT;

ALTER TABLE EMP_ALTER
 ADD TEL VARCHAR2(20);
 
 ALTER TABLE EMP_ALTER
  DROP COLUMN TEL;

#변경 HP --> TEL
ALTER TABLE EMP_ALTER
 RENAME COLUMN HP TO TEL;
SELECT *FROM EMP_ALTER;
COMMIT;

#컬럼의 이름 변경하는게 아닌 타입을 바꾸고 싶을 때
#EMPNO : NUMER(4) ---> NUMBER(5)
DESC EMP_ALTER;

ALTER TABLE EMP_ALTER
 MODIFY EMPNO NUMBER(5);
DESC EMP_ALTER;
 
#ENAME : VARCHAR2(10) ---> VARCHAR2(13)
ALTER TABLE EMP_ALTER
 MODIFY ENAME VARCHAR(13);
DESC EMP_ALTER;

#TEL --> PHONENUMBER 이름 변경
ALTER TABLE EMP_ALTER
 RENAME COLUMN TEL TO PHONENUMBER;
DESC EMP_ALTER;

#테이블의 이름을 변경해 보세요
#EMP_ALTER --> EMP_RENAME
RENAME EMP_ALTER TO EMP_RENAME;
SELECT * FROM EMP_RENAME;
COMMIT;

#테이블의 데이터를 강제로 삭제하는 명령어
TRUNCATE TABLE EMP_RENAME;
SELECT * FROM EMP_RENAME;
COMMIT;

DROP TABLE EMP_RENAME;

#Q1
CREATE TABLE EMP_HW(
    EMPNO       NUMBER(4),
    ENAME       VARCHAR2(10),
    JOB         VARCHAR2(9),
    MGR         NUMBER(4),
    HIREDATE    DATE,
    SAL         NUMBER(7,2),
    COMM        NUMBER(7,2),
    DEPTNO      NUMBER(2)
);

#Q2
ALTER TABLE EMP_HW
 ADD BIGO VARCHAR2(20);
DESC EMP_HW;

#Q3
ALTER TABLE EMP_HW
 MODIFY BIGO VARCHAR2(30);
DESC EMP_HW;

#Q4
ALTER TABLE EMP_HW
 RENAME COLUMN BIGO TO REMARK;
DESC EMP_HW;

COMMIT;

#Q5
INSERT INTO EMP_HW
SELECT EMPNO , ENAME , JOB , MGR , HIREDATE , SAL , COMM , DEPTNO , NULL
FROM EMP;

SELECT * FROM EMP_HW;

#14장 제약
#테이블 생성 시 NOT NULL 값 설정
CREATE TABLE TABLE_NOTNULL(
    LOGIN_ID    VARCHAR2(20) NOT NULL,
    LOGIN_PWD   VARCHAR2(20) NOT NULL,
    TEL         VARCHAR2(20)
);
SELECT * FROM TABLE_NOTNULL;

INSERT INTO TABLE_NOTNULL
VALUES('TEST-ID_01', '1234', '010-1234-5678');

INSERT INTO TABLE_NOTNULL
VALUES('TEST-ID_02', '1234', '010-1234-5678');

#나의 계정의 제약을 확인해 봅시다.
#14-5
SELECT OWNER, CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME
FROM USER_CONSTRAINTS;

#테이블을 만들 때 제약조건의 이름을 지정해서 만들기
CREATE TABLE TABLE_NOTNULL2(
    LOGIN_ID    VARCHAR2(20) CONSTRAINT MY_LOGID NOT NULL,
    LOGIN_PWD   VARCHAR2(20) CONSTRAINT MY_LOGPWD NOT NULL,
    TEL         VARCHAR2(20)
);
SELECT OWNER, CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME
FROM USER_CONSTRAINTS;

#테이블에서 제약조건이 없는 컬럼을 제약조건 지정하기
SELECT * FROM TABLE_NOTNULL;

UPDATE TABLE_NOTNULL
SET TEL = NULL;

SELECT * FROM TABLE_NOTNULL;

ALTER TABLE TABLE_NOTNULL
MODIFY TEL NOT NULL;

DESC TABLE_NOTNULL;

SELECT * FROM TABLE_NOTNULL;

DELETE FROM TABLE_NOTNULL;

#FOREIGN KEY 지정하기
#14-39 DEPT_FT 테이블 생성하기
CREATE TABLE DEPT_FK(
    DEPTNO NUMBER(2) CONSTRAINT DEPTFK_DEPTNO_PK PRIMARY KEY,
    DNAME  VARCHAR2(12),
    LOC    VARCHAR2(11)
);

#14-40
CREATE TABLE EMP_FK(
 EMPNO      NUMBER(4) CONSTRAINT EMPFK_EMPNO_PK PRIMARY KEY,
 ENAME      VARCHAR2(10),
 JOB        VARCHAR2(9),
 MGR        NUMBER(4),
 HIREDATE   DATE,
 SAL        NUMBER(7,2),
 COMM       NUMBER(7,2),
 DEPTNO NUMBER(2) CONSTRAINT EMPFK_DEPTNO_FK 
        REFERENCES DEPT_FK (DEPTNO)
);

